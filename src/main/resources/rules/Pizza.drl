package pl.poznan.put.cs.si.puttalky
 
import pl.poznan.put.cs.si.puttalky.Fakt;
import pl.poznan.put.cs.si.puttalky.Zamowienie; 
import pl.poznan.put.cs.si.puttalky.Ciasto;
import pl.poznan.put.cs.si.puttalky.Dodatek;
import pl.poznan.put.cs.si.puttalky.BazaWiedzy;
import java.util.Set;


/** Author: agalawrynowicz<br>
 * Date: 19-Dec-2016 */

rule "start"
	salience 3
	
	when
		not Fakt(nazwa=="start")
		zamowienie : Zamowienie()
	then
		zamowienie.powitanie();
		System.out.println();
		System.out.println();
		insert(new Fakt("start", "0"));
end

rule "Pytaj istniejaca pizze"
	salience 3

	when

		Fakt(nazwa == "start")
        not Fakt(nazwa == "gotowa_pizza")
        pizza : Pizza()
        parser : Parser()
        baza : BazaWiedzy()
	then
		  pizza.setMonit("Czy chcesz pizzę o konkretnej nazwie lub typie:\n");
		  pizza.zadajPytanie();
		  parser.przetworzOdpowiedz();

		for (String slowo : parser.getSlowaKluczowe()){
			if(slowo.length()>2)
		        insert(new Fakt("gotowa_pizza", slowo.toLowerCase()));

		}
		//
end



rule "Podaj istniejaca pizze"
	salience 3

	when
		fakt : Fakt(nazwa == "gotowa_pizza", wartosc=="tak" ||  wartosc=="owszem"||  wartosc=="oczywiście"||  wartosc=="poproszę") &&
		not Fakt(nazwa == "pizza_propozycja")
		pizza : Pizza()
		parser : Parser()
		baza : BazaWiedzy()
	then

		  pizza.setMonit("Jaką pizze podać?:\n");
		  pizza.zadajPytanie();
		  parser.przetworzOdpowiedz();


        boolean foundMatch = false;
		for (String slowo : parser.getSlowaKluczowe()){
			for (String uriKlasy : baza.dopasujPizze(slowo)) {
		        insert(new Fakt("pizza_propozycja", uriKlasy));
		        if(!foundMatch){
                    insert(new Fakt("gotowa_pizza_wypisz", ""));
                    foundMatch = true;
		        }
		    }
		}
		if(!foundMatch)
		    System.out.print("Brak wzkazanej pizzy\n");
        update(fakt);

end


rule "Podaj dodatki"
	salience 2
	
	when
	    not Fakt(nazwa == "gotowa_pizza_wypisz") &&
		not Fakt(nazwa == "dodatek") &&
		not Fakt(nazwa == "pizza_propozycja")
		dodatek : Dodatek()
		parser : Parser()
		baza : BazaWiedzy()
	then
		  dodatek.setMonit("Jakie dodatki powinna zawierać lub nie zawierać Twoja pizza?:\n");
		  dodatek.zadajPytanie();
		  parser.przetworzOdpowiedz();
		String dodatki="";
		for (String slowo : parser.getSlowaKluczowe()){
			for (String uriKlasy : baza.dopasujDodatek(slowo)) {
			    dodatki=dodatki+uriKlasy+";";

		    } 
		}
	    if(!dodatki.equals("")){
            insert(new Fakt("dodatek", dodatki));

		} else{
		    System.out.println("Brak dodatków");
		}
		update(dodatek);
end

rule "Podaj rodzaj ciasta"
	salience 2
	
	when
		not Fakt(nazwa == "rodzaj_ciasta")
		ciasto : Ciasto()
		parser : Parser()
	then
		  ciasto.setMonit("Podaj rodzaj ciasta:\n");
		  ciasto.zadajPytanie();
		  parser.przetworzOdpowiedz();
		 
		for (String slowo : parser.getSlowaKluczowe()){
			if (slowo.equals("cienki")){
		       insert(new Fakt("rodzaj_ciasta", "cienkie"));
			} else if (slowo.equals("gruby")) {
		       insert(new Fakt("rodzaj_ciasta", "grube"));
			}
		}
					
		//
		
		update(ciasto);
end

rule "Polecana pizza"
	salience 1
	
	when
		Fakt(nazwa == "dodatek") && 
		Fakt(nazwa == "rodzaj_ciasta") && 	
		not Fakt(nazwa == "pizza_propozycja") &&
        $dodatek : Fakt( nazwa == "dodatek")
 		
		baza: BazaWiedzy()
		pizza: Pizza()
	then

		Set<String> pizze = baza.wyszukajPizzePoDodatkach($dodatek.getWartosc());
            
        if (pizze.size()>1){            		
			for (String nazwaPizzy : pizze) {
				insert(new Fakt("pizza_propozycja", nazwaPizzy));

		    	if (!nazwaPizzy.equals("Nothing")){
		       	   System.out.println("Polecam pizzę: "+nazwaPizzy);
		       	}
		    }
		}
		else {
		    if($dodatek.getWartosc().equals("")){
		         System.out.println("Brak dodatków");
		         retract($dodatek);
		    }else{
                insert(new Fakt("pizza_propozycja", "Pizza Scpajcalna"));
                String dodatki ="";
                for(String iri : baza.filtrujDodatki($dodatek.getWartosc())) {
                                            dodatki=dodatki+" "+baza.iriNaNazwe(iri);
                                        }
                System.out.println("Polecam pizzę spacjalną z dodatkami: "+ dodatki);
			}
	    }

end

rule "Wypisz gotową pizze"
	salience 1
	when
	    f : Fakt(nazwa == "pizza_propozycja") &&
	    Fakt(nazwa == "gotowa_pizza_wypisz") &&
	    baza: BazaWiedzy()
	then
	    String nazwa = f.getWartosc();


	    System.out.println("Twoja pizza to "+baza.iriNaNazwe(nazwa));
end

rule "Wypisz gotową pizze brak"
	salience 1
	when
	    not Fakt(nazwa == "pizza_propozycja") &&
	    Fakt(nazwa == "gotowa_pizza_wypisz")
	then
	    System.out.println("Nie ma takiej pizzy");
end

rule "zakończenie"

	when
		not (Fakt(nazwa == "koniec")) &&
		Fakt(nazwa == "pizza_propozycja") 
		zamowienie : Zamowienie()

	then
		insert(new Fakt("koniec", "0"));
		zamowienie.pozegnanie();
end

